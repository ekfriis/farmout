process T = 
{
   # this example configuration offers some minimum 
   # annotation, to help users get through; please
   # don't hesitate to read through the comments


   # use MessageLogger to redirect/suppress multiple
   # service messages coming from the system
   #
   # in this config below, we use the replace option to make
   # the logger let out messages of severity ERROR (INFO level
   # will be suppressed), and we want to limit the number to 10
   #
   include "FWCore/MessageService/data/MessageLogger.cfi"
   replace MessageLogger.cout.threshold = "ERROR"
   replace MessageLogger.cerr.default.limit = 10
   
   # in you wish to quiet the logger even more and leave in 
   # only info from the Framework, use config example below :
   #
   #service = MessageLogger
   #{
   #   untracked vstring destinations = {"cout"} 
   #   untracked vstring categories = { "FwkJob" } 
   #   untracked PSet cout =
   #   {
   #      untracked PSet default = { untracked int32 limit = 0 }  # kill all messages in the log
   #      untracked PSet FwkJob  = { untracked int32 limit = -1 } # but FwkJob category - those unlimitted
   #   } 
   #}
   
   
   
   service = RandomNumberGeneratorService
   {
      untracked uint32 sourceSeed = $randomNumber
      PSet moduleSeeds =
      {
         untracked uint32 VtxSmeared = 98765432
	 untracked uint32 g4SimHits  = 11
	 untracked uint32 mix        = 12345   
      }
   }

   # an example of "source", flat-energy single pion gun in this case
   # 
   source = FlatRandomPtGunSource
   {
      untracked int32 maxEvents = $nEventsPerJob
      untracked PSet PGunParameters =
      {
         # you can request more than 1 particle
	 # since PartID is a vector, you can place in as many 
	 # PDG id's as you wish, comma seaparated
	 #
         untracked vint32 PartID = { 11 }
         untracked double MinEta = -2.5
         untracked double MaxEta = 2.5
         untracked double MinPhi = -3.14159265358979323846 # in radians
         untracked double MaxPhi =  3.14159265358979323846
         untracked double MinPt  = 30.
         untracked double MaxPt  = 30.
      }
      untracked bool AddAntiParticle = false # No back-to-back particles
      untracked int32 Verbosity = 0 # set to 1 (or greater)  for printouts
   }
   
include "Configuration/StandardSequences/data/Reconstruction.cff"

# this config frament brings you 3 steps of the detector simulation:
# -- vertex smearing (IR modeling)
# -- G4-based hit level detector simulation
# -- digitization (electronics readout modeling)
# it returns 2 sequences : 
# -- psim (vtx smearing + G4 sim)
# -- pdigi (digitization in all subsystems, i.e. tracker=pix+sistrips,
#           cal=ecal+ecal-0-suppression+hcal), muon=csc+dt+rpc)
#
include "Configuration/StandardSequences/data/Simulation.cff"

# please note the IMPORTANT: 
# in order to operate Digis, one needs to include Mixing module 
# (pileup modeling), at least in the 0-pileup mode
#
# There're 3 possible configurations of the Mixing module :
# no-pileup, low luminosity pileup, and high luminosity pileup
#
# they come, respectively, through the 3 config fragments below
#
# *each* config returns label "mix"; thus you canNOT have them
# all together in the same configuration, but only one !!!
#


include "Configuration/StandardSequences/data/MixingNoPileUp.cff" 
#include "Configuration/StandardSequences/data/MixingLowLumiPileUp.cff" 
#include "Configuration/StandardSequences/data/MixingHighLumiPileUp.cff" 

# Vertex smearing
#
# There're 3 types of Vertex smearing module (Gauss, Flat, BeamProfile);
# the cff's are available for each one :
# Configuration/StandardSequences/data/VtxSmearedGauss.cff
# Configuration/StandardSequences/data/VtxSmearedNoSmear.cff
# Configuration/StandardSequences/data/VtxSmearedFlat.cff
# Configuration/StandardSequences/data/VtxSmearedBeamPreofile.cff
# Currently, we suggest using Gaussian vertex smearing

include "Configuration/StandardSequences/data/VtxSmearedGauss.cff" 
#include "Configuration/StandardSequences/data/VtxSmearedNoSmear.cff" 
#include "Configuration/StandardSequences/data/VtxSmearedFlat.cff" 
#include "Configuration/StandardSequences/data/VtxSmearedBeamProfile.cff" 

#
# You can set Mag Field to 0
#
#include "Configuration/StandardSequences/data/UseZeroBField.cff"

    path p1 = {psim} # simulation
    path p2 = {pdigi} # digitization
    path p3 = {reconstruction} # reconstruction

   # Event output
include "Configuration/EventContent/data/EventContent.cff"
   module FEVT = PoolOutputModule 
   { 
     	using FEVTSIMEventContent
	untracked string fileName = "$outputFileName"
   }

   endpath outpath = {FEVT}

   schedule = {p1,p2,p3,outpath}
}		
